# Modified Versionn of the sample workflow for building and deploying a Next.js site to GitHub Pages
# Expect there's no deployment to GitHub Pages
# And the purpose of this workflow is to ensure there's no build errors (for my purposes at least)
# CloudFlare Pages handles continuous deployment.
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Checking for No Build Errors (Next.js)

on:
  push:
    branches: ["react-version"]
  pull_request:
    branches: ["react-version"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    env:
      NEXT_PUBLIC_RESUME_LINK: ${{ secrets.NEXT_PUBLIC_RESUME_LINK }}
      NEXT_PUBLIC_ADOBE_CLIENT_ID: ${{ secrets.ADOBE_CLIENT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build


  # Deployment job
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      NEXT_PUBLIC_RESUME_LINK: ${{ secrets.NEXT_PUBLIC_RESUME_LINK }}
      NEXT_PUBLIC_ADOBE_CLIENT_ID: ${{ secrets.ADOBE_CLIENT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
